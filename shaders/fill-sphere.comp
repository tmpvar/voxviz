#version 430 core
#extension GL_NV_shader_buffer_load: enable
//#extension GL_ARB_compute_variable_group_size: enable
#extension GL_ARB_compute_shader: enable
#extension GL_NV_gpu_shader5: enable

uniform uvec3 dims;
uniform vec3 center;
uniform float *volume;


layout( local_size_x = 32, local_size_y = 1, local_size_z = 1 ) in;
//layout( local_size_variable ) in;

void main() {
	uvec3 pos = gl_GlobalInvocationID;
	uint idx = pos.x + pos.y * dims.x + pos.z * dims.x * dims.y;

	float hd = float(dims.x) / 2.0;
	float d = distance(vec3(pos), vec3(hd)) - hd;
	
	
	//d = float(center.y + pos.y) - (sin(center.x + float(pos.x) / 64.0) * 128);
	
	volume[idx] = d <= 0.0 ? 1.0 : 0.0;
}