#version 430 core

#extension GL_ARB_compute_shader: enable


layout( local_size_x = 32, local_size_y = 1, local_size_z = 1 ) in;

uniform vec3 dims;
uniform uint time;

// uses bindings 1-7 and requires `dims`
#include "voxel-space-mips.glsl"

layout (std430) buffer blueNoiseBuffer {
  vec2 blueNoise[];
};

//
// bool move(uvec3 src, ivec3 dest_offset, bool moved) {
//   if (moved) {
//     return true;
//   }
//   uvec3 d = uvec3(dims);
//   uint max_index = (d.x * d.y * d.z);
//   uint src_idx = (src.x + src.y * d.x + src.z * d.x * d.y);// % max_index;
//   uvec3 dest = src + dest_offset;
//   uint dest_idx = (dest.x + dest.y * d.x + dest.z * d.x * d.y);// % max_index;
//
//   uint src_value = volumeMip0[src_idx];
//
//   if (src_value != uint(0)) {
//     if (volumeMip0[dest_idx] == uint(0)) {
//       volumeMip0[dest_idx] = src_value;
//       volumeMip0[src_idx] = uint(0);
//       return true;
//     }
//   }
//   return false;
// }
//
// uint get(uvec3 pos) {
//   uvec3 d = uvec3(dims);
//   uint idx = (pos.x + pos.y * d.x + pos.z * d.x * d.y);// % max_index;
//
//   return volumeMip0[idx];
// }
//
// void main() {
//
//   uvec3 last_pos = uvec3(gl_GlobalInvocationID.x, 0, gl_GlobalInvocationID.z);
//
//   if (any(greaterThanEqual(last_pos, dims))) {
//     return;
//   }
//
//   const uint zero = uint(0);
//   bool moved = false;
//   uint y = 1;
//   for (y; y<dims.y; y++) {
//     uvec3 current_pos = uvec3(last_pos.x, y, last_pos.z);
//     bool lmoved = move(current_pos, ivec3(0, -1, 0), false);
//
//     if (get(current_pos) <= uint(16)) {
//       lmoved = move(current_pos, ivec3( 0, -1,  1), lmoved);
//       lmoved = move(current_pos, ivec3( 0, -1, -1), lmoved);
//       lmoved = move(current_pos, ivec3( 1, -1,  0), lmoved);
//       lmoved = move(current_pos, ivec3(-1, -1,  0), lmoved);
//       lmoved = move(current_pos, ivec3( 1, -1,  1), lmoved);
//       lmoved = move(current_pos, ivec3( 1, -1, -1), lmoved);
//       lmoved = move(current_pos, ivec3( 1, -1,  1), lmoved);
//       lmoved = move(current_pos, ivec3(-1, -1,  1), lmoved);
//     }
//
//     moved = moved || lmoved;
//   }
//
//   if (!moved) {
//     uvec3 d = uvec3(dims);
//     uint dest_idx = (last_pos.x + (d.y - 1) * d.x + last_pos.z * d.x * d.y);
//
//     vec2 uv = last_pos.xz / d.xz;
//     vec2 bn = 2.0 * blueNoise[time + (last_pos.z * last_pos.x % 4096) * (time % 64)].xy - 0.5;
//
//     volumeMip0[dest_idx] = uint(
//        //dest_idx % 200 + 2
//       length(bn) < 0.2515  ? uint(16) : volumeMip0[dest_idx]
//     );
//   }
// }
void main() {}
