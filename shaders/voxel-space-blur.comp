#version 430 core
#extension GL_NV_gpu_shader5: enable
#extension GL_ARB_bindless_texture : require
#extension GL_ARB_compute_shader: enable

#include "voxel-space.glsl"
#include "cosine-direction.glsl"

layout( local_size_x = 32, local_size_y = 16, local_size_z = 1 ) in;

layout (std430) buffer outColorBuffer {
  vec4 out_color[];
};

layout (std430) buffer inTerminationBuffer {
  RayTermination in_termination[];
};

layout (std430) buffer blueNoiseBuffer {
  vec4 blueNoise[];
};


uniform uvec2 resolution;
uniform uint time;
uniform vec3 eye;
uniform vec3 dims;
uniform float debug;
uniform uint terminationBufferIdx;

void main() {

  uvec2 pos = uvec2(gl_GlobalInvocationID.xy);
  uint idx = pos.x + pos.y * resolution.x;

  out_color[idx] = in_termination[idx].color;

}
